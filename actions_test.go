package eosapi

import (
	"encoding/hex"
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestActionNewAccount(t *testing.T) {
	a := &Action{
		Account: AccountName("eosio"),
		Name:    ActionName("newaccount"),
		Authorization: []PermissionLevel{
			{AccountName("eosio"), PermissionName("active")},
		},
		Data: NewAccount{
			Creator: AccountName("eosio"),
			Name:    AccountName("abourget"),
			Owner: Authority{
				Threshold: 1,
				Keys: []KeyWeight{
					KeyWeight{
						PublicKey: "EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV",
						Weight:    1,
					},
				},
			},
			Active: Authority{
				Threshold: 1,
				Keys: []KeyWeight{
					KeyWeight{
						PublicKey: "EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV",
						Weight:    1,
					},
				},
			},
		},
	}

	buf, err := MarshalBinary(a)
	assert.NoError(t, err)

	// FETCHED FROM A SIMILAR TRANSACTION VIA `eosioc`, includes the Transaction headers though:
	// transaction header:
	//    expiration epoch: 1e76ac5a
	//    region: 0000
	//    blocknum: 62cf
	//    blockprefix: 50090bd8
	//    packedbandwidthwords: 0000
	//    contexfreecpubandwidth: 0000
	//    []ContextFreeActions: 00
	//    []Actions: 01
	// Action idx 0:
	//  account: 0000000000ea3055 (eosio)
	//  name: 00409e9a2264b89a (newaccount)
	//  []authorizations: 01
	//   - actor: 0000000000ea3055 (eosio)
	//     permission: 00000000a8ed3232 (active)
	//  data len: 7c (124, indeed the length of the following...
	//  creator: 0000000000ea3055
	//  name: 0000001e4d75af46
	//  owner authority:
	//   threshold: 01000000
	//   []accounts: 00
	//   []keys: 01
	//     - publickey: 0002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf // fixed width.
	//       weight: 0100
	//  active authority:
	//   threshold: 01000000
	//   []accounts: 00
	//   []keys: 01
	//     - publickey: 0002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf
	//       weight: 0100
	//  recovery authority:
	//    threshold: 0100
	//    []accounts: 00
	//    []keys: 00
	// now the `newaccount` struct is done.. what,s that ?
	// a list of a new object: 01
	// an account name: 0000000000ea3055 (eosio)
	// a permission name: 00000000a8ed3232 (active)
	// some list with one thing: 01
	//   - an empty list: 00
	//   - another empty list: 00

	// 0000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed32326a0000000000ea305500000059b1abe9310100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf01000100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf0100000000000000
	// Generated by the first run:
	// account: 0000000000ea3055 (eosio)
	// name: 00409e9a2264b89a (newaccount)
	// []authorizations: 01
	//  - actor: 0000000000ea3055 (eosio)
	//    permission: 00000000a8ed3232 (active)
	// data length: 6a (106) which MATCHES the lengths to follow.
	// NewAccount:
	//  creator: 0000000000ea3055 (eosio)
	//  name: 00000059b1abe931 (abourget)
	// owner-authority:
	//  threshold: 01000000
	//  []accounts: 00
	//  []keys: 01
	//  - publickey: 0002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf
	//    weight: 0100
	// active-authority:
	//  threshold: 01000000
	//  []accounts: 00
	//  []keys: 01
	//  - pubkey: 0002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf
	//    weight: 0100
	// recovery-authority:
	//  threshold: 00000000
	//  []accounts: 00
	//  []keys: 00

	assert.Equal(t, `0000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed32326a0000000000ea305500000059b1abe9310100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf01000100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf0100000000000000`, hex.EncodeToString(buf))

	buf, err = json.Marshal(a)
	assert.NoError(t, err)
	assert.Equal(t, `{"account":"eosio","authorization":[{"actor":"eosio","permission":"active"}],"data":"0000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed32326a0000000000ea305500000059b1abe9310100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf01000100000000010002c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf0100000000000000","name":"newaccount"}
`, string(buf))

}
